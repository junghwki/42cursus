/*####################################################################################################*/
pthread_create: 스레드를 생성한다.

int pthread_create(pthread_t *restrict thread, const pthread_attr_t *restrict attr, void *(*start_routine)(void *), void *restrictarg);

	반환 값
	성공적으로 수행되면 0을 반환하고 생성된 스레드 ID는 thread에 저장된다, 그렇지 않다면 오류 값을 반환한다.

	오류 값
	EAGAIN
	새로운 스레드를 생성하기 위한 자원이 부족하다.
	EINVAL
	스레드 속성 객체가 유효하지 않다.
	EFAULT
	스레드 ID를 반환할 주소나 시작 함수가 NULL로 설정되었다.

/*####################################################################################################*/
pthread_detach: 스레드를 프로세스로부터 분리한다.

int pthread_detach(pthread_t thread);

	반환 값
	성공적으로 수행되면 0을 반환하고, 그렇지 않다면 오류 값을 반환한다.

	오류 값
	ESRCH
	지정한 스레드는 존재하지 않는다.
	EINVAL
	지정한 스레드는 이미 분리되었다.

/*####################################################################################################*/
pthread_join: 스레드 종료를 대기한다.

int pthread_join(pthread_t thread, void **value_ptr);

	반환 값
	성공적으로 수행되면 0을 반환하고, 그렇지 않다면 오류 값을 반환한다.

	오류 값
	ESRCH
	지정한 스레드는 존재하지 않는다.
	EINVAL
	지정한 스레드는 종료 대기할 수 없다.

/*####################################################################################################*/
pthread_mutex_init: 뮤텍스 객체를 초기화한다.

int pthread_mutex_init(pthread_mutex_t *restrict mutex, const pthread_mutexattr_t *restrictattr);

	반환 값
	성공적으로 수행되면 0을 반환하고, 그렇지 않다면 오류 값을 반환한다.

	오류 값
	EINVAL
	지정한 뮤텍스 객체 mutex가 NULL이다.
	EBUSY
	지정한 뮤텍스 객체 mutex은 이미 초기화되었다.
	EINVAL
	지정한 뮤텍스 속성 객체 attr은 초기화되지 않았다.

/*####################################################################################################*/
pthread_mutex_destroy: 뮤텍스를 파괴한다.

int pthread_mutex_destroy(pthread_mutex_t *mutex);

	반환 값
	성공적으로 수행되면 0을 반환하고, 그렇지 않다면 오류 값을 반환한다.

	오류 값
	EINVAL
	지정한 뮤텍스 객체 mutex은 유효하지 않다.
	EBUSY
	지정한 뮤텍스 객체는 다른 스레드에 의해 잠겨있다.

/*####################################################################################################*/
pthread_mutex_lock: 뮤텍스 객체를 잠근다.

int pthread_mutex_lock(pthread_mutex_t *mutex);

	반환 값
	성공적으로 수행되면 0을 반환하고, 그렇지 않다면 오류 값을 반환한다.

	오류 값
	EINVAL
	지정한 뮤텍스 객체 mutex가 NULL이거나 유효한 뮤텍스 객체가 아니다.
	EINVAL
	지정한 뮤텍스 객체 mutex이 PTHREAD_PRIO_PROTECT 속성 값을 가지고 있고, 호출한 스레드의 우선순위가 뮤텍스의 상한 우선순위보다 크다.
	EDEADLK
	지정한 뮤텍스 객체에서 데드락 조건이 발생하였다.
	EAGAIN
	지정한 뮤텍스 객체에서 재잠금 횟수를 초과하였다.

/*####################################################################################################*/
pthread_mutex_unlock: 뮤텍스 객체의 잠금을 해지한다.

int pthread_mutex_unlock(pthread_mutex_t *mutex);

	반환 값
	성공적으로 수행되면 0을 반환하고, 그렇지 않다면 오류 값을 반환한다.

	오류 값
	EINVAL
	지정한 뮤텍스 객체 mutex가 NULL이거나 유효한 뮤텍스 객체가 아니다.
	EPERM
	지정한 뮤텍스 객체는 호출한 스레드에 의해 잠기지 않았다.

/*####################################################################################################*/